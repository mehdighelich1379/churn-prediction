import pandas as pd
import joblib
from xgboost import XGBClassifier
from src.data.preprocess import preprocess
from src.models.train_model import train_model
from src.utils.metrics import show_results, Cv_results

def main():
    data_path = "data/customer_churn_dataset-training-master.csv"
    base_model= XGBClassifier(
        n_estimators=300,        # ØªØ¹Ø¯Ø§Ø¯ Ø¯Ø±Ø®Øªâ€ŒÙ‡Ø§
        learning_rate=0.05,       # Ù†Ø±Ø® ÛŒØ§Ø¯Ú¯ÛŒØ±ÛŒ
        max_depth=6,             # Ø¨ÛŒØ´ÛŒÙ†Ù‡ Ø¹Ù…Ù‚ Ù‡Ø± Ø¯Ø±Ø®Øª
        subsample=0.8,           # Ø¯Ø±ØµØ¯ Ù†Ù…ÙˆÙ†Ù‡â€ŒÚ¯ÛŒØ±ÛŒ Ø§Ø² Ø¯Ø§Ø¯Ù‡â€ŒÙ‡Ø§ Ø¨Ø±Ø§ÛŒ Ù‡Ø± Ø¯Ø±Ø®Øª
        gamma=0,                 # Ø­Ø¯Ø§Ù‚Ù„ Ú©Ø§Ù‡Ø´ Ù„Ø§Ø²Ù… Ø¨Ø±Ø§ÛŒ ØªÙ‚Ø³ÛŒÙ… Ú¯Ø±Ù‡
        reg_alpha=0,             # L1 regularization term
        reg_lambda=1,            # L2 regularization term
        use_label_encoder=False, # Ø¬Ù„ÙˆÚ¯ÛŒØ±ÛŒ Ø§Ø² Ø§Ø®Ø·Ø§Ø± Ù†Ø³Ø®Ù‡â€ŒÙ‡Ø§ÛŒ Ù‚Ø¯ÛŒÙ…ÛŒ
        eval_metric='logloss',   # Ù…Ø¹ÛŒØ§Ø± Ø§Ø±Ø²ÛŒØ§Ø¨ÛŒ
        random_state=42          # Ø¨Ø§Ø²ØªÙˆÙ„ÛŒØ¯Ù¾Ø°ÛŒØ±ÛŒ
    )

    print("ðŸ”§ Training on old data...")
    pipeline , x_train , x_test , y_train , y_test  , X , Y = preprocess(base_model , data_path , random_state=42 , test_size = 0.3)
    pipeline = train_model(pipeline, x_train, y_train)

    show_results(pipeline , x_test , y_test , threshold=0.5)

    print("\nðŸ“ˆ Cross Validation:")
    df = Cv_results(model=pipeline , X=X , Y=Y )
    df.to_csv('src//utils/Cv_results.csv')


if __name__ == "__main__":
    main()
